language: cpp
compiler: 
  - gcc
#  - clang
sudo: required
dist: trusty

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      # Update the default 'trusty' linker and gcc version for tests to link and pass.
      - g++-5
      - binutils-2.26
before_script:
# Update the default 'trusty' linker version for tests to link and pass.  # Update the default 'trusty' linker and gcc version for tests to link and pass.
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
  sudo apt-get install -y binutils-2.26 && sudo update-alternatives --install   sudo update-alternatives --install /usr/bin/ld ld /usr/lib/binutils-2.26/bin/ld 90;
  /usr/bin/ld ld /usr/lib/binutils-2.26/bin/ld 90; fi   fi

install:
  # CppCheck
  - sudo apt-get install -qq cppcheck
  # Gcovr
  - sudo apt-get install gcovr
  # mlpack
  - sudo add-apt-repository ppa:titas-chanda/armadillo -y
  - sudo apt-get update
  - sudo apt-get install libarmadillo-dev libgsl0-dev libboost-program-options-dev libboost-math-dev libboost-test-dev libboost-serialization-dev

script:
  # Install mlpack
  - wget https://github.com/mlpack/mlpack/archive/mlpack-3.0.0.zip
  - unzip mlpack-3.0.0.zip
  - cd mlpack-mlpack-3.0.0/
  - mkdir build
  - cd build
  - cmake -DBUILD_CLI_EXECUTABLES=OFF -DBUILD_TESTS=OFF ../
  - make
  - sudo make install
  - cd ../../
  - rm -rf mlpack-mlpack-3.0.0/
  # Runs compilation, cppcheck, tests and coverage collection
  - mkdir build
  - cd build
  - cmake ../ -DENABLE_CODECOV=ON -DENABLE_TESTS=ON -DENABLE_CPPCHECK=ON
  - make && make cppcheck && (make coverage || (cat ./Testing/Temporary/LastTest.log && exit 1))
  - cd ..

after_success:
    # codecov.io
    - bash <(curl -s https://codecov.io/bash) -f build/coverage.xml

notifications:
  email:
    recipients:
      - d.desensi.software@gmail.com
    on_success: never # default: change
    on_failure: always # default: always
  
